component meca500 "HAL meca500 drive interface layer";
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
//
author "djsftree";
license "GPL";

description """
for meca500 EtherCAT dictionary see
https://cdn.mecademic.com/uploads/docs/meca500-r3-programming-manual-8-4.pdf#subsection.4.2
""";

option extra_setup;

// inputs from robot
pin in bit stat_busy                "true indicates that the robot is busy";
pin in bit stat_activated           "true indicates that the robot is activated";
pin in bit stat_homed               "true indicates that the robot is internaly homed";
pin in unsigned stat_error_code     "robot error controlword";
pin in bit mstat_ex_torque          "true robot excessive torque detected";
pin in float enc_a1                 "A1 position feedback, degrees";
pin in float enc_a2                 "A2 position feedback, degrees";
pin in float enc_a3                 "A3 position feedback, degrees";
pin in float enc_a4                 "A4 position feedback, degrees";
pin in float enc_a5                 "A5 position feedback, degrees";
pin in float enc_a6                 "A6 position feedback, degrees";
pin in float vel_a1                 "A1 velocity feedback, degrees/sec";
pin in float vel_a2                 "A2 velocity feedback, degrees/sec";
pin in float vel_a3                 "A3 velocity feedback, degrees/sec";
pin in float vel_a4                 "A4 velocity feedback, degrees/sec";
pin in float vel_a5                 "A5 velocity feedback, degrees/sec";
pin in float vel_a6                 "A6 velocity feedback, degrees/sec";
pin out float pose_a1               "X origin of the TRF w.r.t. the WRF, mm";
pin out float pose_a2               "Y origin of the TRF w.r.t. the WRF, mm";
pin out float pose_a3               "Z origin of the TRF w.r.t. the WRF, mm";
pin out float pose_a4               "orientation of the TRF w.r.t. the WRF, degrees";
pin out float pose_a5               "orientation of the TRF w.r.t. the WRF, degrees";
pin out float pose_a6               "orientation of the TRF w.r.t. the WRF, degrees";

// outputs to robot
pin io bit deactivate               "true deactivates the robot, no further EtherCAT data sent";
pin io bit activate                 "true activates the robot ready for homing";
pin io bit home                     "true starts the robot internal home procedure";
pin io bit reset_error;
pin io unsigned move_id;
pin io bit set_point;
pin io bit pause;
pin io bit clear_move;
pin io bit reset_pstop;
pin out unsigned move_cmd            "Robot in Cyclic Velocity Mode = 21";
pin out float move_a1                "target velocity command to the A1 drive";
pin out float move_a2                "target velocity command to the A2 drive";
pin out float move_a3                "target velocity command to the A3 drive";
pin out float move_a4                "target velocity command to the A4 drive";
pin out float move_a5                "target velocity command to the A5 drive";
pin out float move_a6                "target velocity command to the A6 drive";

// control IOs
pin in bit enable_a1                 "true enables the A1 drive";
pin in bit enable_a2                 "true enables the A2 drive";
pin in bit enable_a3                 "true enables the A3 drive";
pin in bit enable_a4                 "true enables the A4 drive";
pin in bit enable_a5                 "true enables the A5 drive";
pin in bit enable_a6                 "true enables the A6 drive";
pin in float velocity_a1             "A1 target velocity, from Motion or PID";
pin in float velocity_a2             "A2 target velocity, from Motion or PID";
pin in float velocity_a3             "A3 target velocity, from Motion or PID";
pin in float velocity_a4             "A4 target velocity, from Motion or PID";
pin in float velocity_a5             "A5 target velocity, from Motion or PID";
pin in float velocity_a6             "A6 target velocity, from Motion or PID";
pin out float pos_fb_a1              "A1 position feedback, scaled";
pin out float pos_fb_a2              "A2 position feedback, scaled";
pin out float pos_fb_a3              "A3 position feedback, scaled";
pin out float pos_fb_a4              "A4 position feedback, scaled";
pin out float pos_fb_a5              "A5 position feedback, scaled";
pin out float pos_fb_a6              "A6 position feedback, scaled";
pin out float velocity_fb_a1         "A1 velocity feedback, scaled";
pin out float velocity_fb_a2         "A2 velocity feedback, scaled";
pin out float velocity_fb_a3         "A3 velocity feedback, scaled";
pin out float velocity_fb_a4         "A4 velocity feedback, scaled";
pin out float velocity_fb_a5         "A5 velocity feedback, scaled";
pin out float velocity_fb_a6         "A6 velocity feedback, scaled";
pin out bit robot_fault              "true indicates an robot error";

//Homing IOs
pin io bit home_a1                   "true starts A1 homing -> joint.0.index-enable";
pin io bit home_a2                   "true starts A2 homing -> joint.1.index-enable";
pin io bit home_a3                   "true starts A3 homing -> joint.2.index-enable";
pin io bit home_a4                   "true starts A4 homing -> joint.3.index-enable";
pin io bit home_a5                   "true starts A5 homing -> joint.4.index-enable";
pin io bit home_a6                   "true starts A6 homing -> joint.5.index-enable";
pin out bit stat_homed_a1            "true indicates that A1 is internaly homed";
pin out bit stat_homed_a2            "true indicates that A2 is internaly homed";
pin out bit stat_homed_a3            "true indicates that A3 is internaly homed";
pin out bit stat_homed_a4            "true indicates that A4 is internaly homed";
pin out bit stat_homed_a5            "true indicates that A5 is internaly homed";
pin out bit stat_homed_a6            "true indicates that A6 is internaly homed";
pin out bit stat_homing_a1           "true indicates that A1 homing procedure is running";
pin out bit stat_homing_a2           "true indicates that A2 homing procedure is running";
pin out bit stat_homing_a3           "true indicates that A3 homing procedure is running";
pin out bit stat_homing_a4           "true indicates that A4 homing procedure is running";
pin out bit stat_homing_a5           "true indicates that A5 homing procedure is running";
pin out bit stat_homing_a6           "true indicates that A6 homing procedure is running";

// declare functions
function read_all;
function write_all;

;;

// EXTRA_SETUP is executed before rtapi_app_main()
EXTRA_SETUP ()  {
  // initialize variables
  rtapi_print("\n!!!%s: Meca500 Interface Layer\n\n",__FILE__);
  return 0;
}

FUNCTION(read_all) {
  return 0;
}

FUNCTION(write_all) {
  return 0;
}
